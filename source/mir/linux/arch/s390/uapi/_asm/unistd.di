/++
Auto-generated Linux syscall constants for S390
+/
module mir.linux.arch.s390.uapi._asm.unistd;
version(LDC) pragma(LDC_no_moduleinfo);

enum NR_exit = 1;
enum NR_fork = 2;
enum NR_read = 3;
enum NR_write = 4;
enum NR_open = 5;
enum NR_close = 6;
enum NR_restart_syscall = 7;
enum NR_creat = 8;
enum NR_link = 9;
enum NR_unlink = 10;
enum NR_execve = 11;
enum NR_chdir = 12;
enum NR_mknod = 14;
enum NR_chmod = 15;
enum NR_lseek = 19;
enum NR_getpid = 20;
enum NR_mount = 21;
enum NR_umount = 22;
enum NR_ptrace = 26;
enum NR_alarm = 27;
enum NR_pause = 29;
enum NR_utime = 30;
enum NR_access = 33;
enum NR_nice = 34;
enum NR_sync = 36;
enum NR_kill = 37;
enum NR_rename = 38;
enum NR_mkdir = 39;
enum NR_rmdir = 40;
enum NR_dup = 41;
enum NR_pipe = 42;
enum NR_times = 43;
enum NR_brk = 45;
enum NR_signal = 48;
enum NR_acct = 51;
enum NR_umount2 = 52;
enum NR_ioctl = 54;
enum NR_fcntl = 55;
enum NR_setpgid = 57;
enum NR_umask = 60;
enum NR_chroot = 61;
enum NR_ustat = 62;
enum NR_dup2 = 63;
enum NR_getppid = 64;
enum NR_getpgrp = 65;
enum NR_setsid = 66;
enum NR_sigaction = 67;
enum NR_sigsuspend = 72;
enum NR_sigpending = 73;
enum NR_sethostname = 74;
enum NR_setrlimit = 75;
enum NR_getrusage = 77;
enum NR_gettimeofday = 78;
enum NR_settimeofday = 79;
enum NR_symlink = 83;
enum NR_readlink = 85;
enum NR_uselib = 86;
enum NR_swapon = 87;
enum NR_reboot = 88;
enum NR_readdir = 89;
enum NR_mmap = 90;
enum NR_munmap = 91;
enum NR_truncate = 92;
enum NR_ftruncate = 93;
enum NR_fchmod = 94;
enum NR_getpriority = 96;
enum NR_setpriority = 97;
enum NR_statfs = 99;
enum NR_fstatfs = 100;
enum NR_socketcall = 102;
enum NR_syslog = 103;
enum NR_setitimer = 104;
enum NR_getitimer = 105;
enum NR_stat = 106;
enum NR_lstat = 107;
enum NR_fstat = 108;
enum NR_lookup_dcookie = 110;
enum NR_vhangup = 111;
enum NR_idle = 112;
enum NR_wait4 = 114;
enum NR_swapoff = 115;
enum NR_sysinfo = 116;
enum NR_ipc = 117;
enum NR_fsync = 118;
enum NR_sigreturn = 119;
enum NR_clone = 120;
enum NR_setdomainname = 121;
enum NR_uname = 122;
enum NR_adjtimex = 124;
enum NR_mprotect = 125;
enum NR_sigprocmask = 126;
enum NR_create_module = 127;
enum NR_init_module = 128;
enum NR_delete_module = 129;
enum NR_get_kernel_syms = 130;
enum NR_quotactl = 131;
enum NR_getpgid = 132;
enum NR_fchdir = 133;
enum NR_bdflush = 134;
enum NR_sysfs = 135;
enum NR_personality = 136;
enum NR_afs_syscall = 137;
enum NR_getdents = 141;
enum NR_flock = 143;
enum NR_msync = 144;
enum NR_readv = 145;
enum NR_writev = 146;
enum NR_getsid = 147;
enum NR_fdatasync = 148;
enum NR__sysctl = 149;
enum NR_mlock = 150;
enum NR_munlock = 151;
enum NR_mlockall = 152;
enum NR_munlockall = 153;
enum NR_sched_setparam = 154;
enum NR_sched_getparam = 155;
enum NR_sched_setscheduler = 156;
enum NR_sched_getscheduler = 157;
enum NR_sched_yield = 158;
enum NR_sched_get_priority_max = 159;
enum NR_sched_get_priority_min = 160;
enum NR_sched_rr_get_interval = 161;
enum NR_nanosleep = 162;
enum NR_mremap = 163;
enum NR_query_module = 167;
enum NR_poll = 168;
enum NR_nfsservctl = 169;
enum NR_prctl = 172;
enum NR_rt_sigreturn = 173;
enum NR_rt_sigaction = 174;
enum NR_rt_sigprocmask = 175;
enum NR_rt_sigpending = 176;
enum NR_rt_sigtimedwait = 177;
enum NR_rt_sigqueueinfo = 178;
enum NR_rt_sigsuspend = 179;
enum NR_pread64 = 180;
enum NR_pwrite64 = 181;
enum NR_getcwd = 183;
enum NR_capget = 184;
enum NR_capset = 185;
enum NR_sigaltstack = 186;
enum NR_sendfile = 187;
enum NR_getpmsg = 188;
enum NR_putpmsg = 189;
enum NR_vfork = 190;
enum NR_pivot_root = 217;
enum NR_mincore = 218;
enum NR_madvise = 219;
enum NR_getdents64 = 220;
enum NR_readahead = 222;
enum NR_setxattr = 224;
enum NR_lsetxattr = 225;
enum NR_fsetxattr = 226;
enum NR_getxattr = 227;
enum NR_lgetxattr = 228;
enum NR_fgetxattr = 229;
enum NR_listxattr = 230;
enum NR_llistxattr = 231;
enum NR_flistxattr = 232;
enum NR_removexattr = 233;
enum NR_lremovexattr = 234;
enum NR_fremovexattr = 235;
enum NR_gettid = 236;
enum NR_tkill = 237;
enum NR_futex = 238;
enum NR_sched_setaffinity = 239;
enum NR_sched_getaffinity = 240;
enum NR_tgkill = 241;
enum NR_io_setup = 243;
enum NR_io_destroy = 244;
enum NR_io_getevents = 245;
enum NR_io_submit = 246;
enum NR_io_cancel = 247;
enum NR_exit_group = 248;
enum NR_epoll_create = 249;
enum NR_epoll_ctl = 250;
enum NR_epoll_wait = 251;
enum NR_set_tid_address = 252;
enum NR_fadvise64 = 253;
enum NR_timer_create = 254;
enum NR_timer_settime = 255;
enum NR_timer_gettime = 256;
enum NR_timer_getoverrun = 257;
enum NR_timer_delete = 258;
enum NR_clock_settime = 259;
enum NR_clock_gettime = 260;
enum NR_clock_getres = 261;
enum NR_clock_nanosleep = 262;
enum NR_statfs64 = 265;
enum NR_fstatfs64 = 266;
enum NR_remap_file_pages = 267;
enum NR_mbind = 268;
enum NR_get_mempolicy = 269;
enum NR_set_mempolicy = 270;
enum NR_mq_open = 271;
enum NR_mq_unlink = 272;
enum NR_mq_timedsend = 273;
enum NR_mq_timedreceive = 274;
enum NR_mq_notify = 275;
enum NR_mq_getsetattr = 276;
enum NR_kexec_load = 277;
enum NR_add_key = 278;
enum NR_request_key = 279;
enum NR_keyctl = 280;
enum NR_waitid = 281;
enum NR_ioprio_set = 282;
enum NR_ioprio_get = 283;
enum NR_inotify_init = 284;
enum NR_inotify_add_watch = 285;
enum NR_inotify_rm_watch = 286;
enum NR_migrate_pages = 287;
enum NR_openat = 288;
enum NR_mkdirat = 289;
enum NR_mknodat = 290;
enum NR_fchownat = 291;
enum NR_futimesat = 292;
enum NR_unlinkat = 294;
enum NR_renameat = 295;
enum NR_linkat = 296;
enum NR_symlinkat = 297;
enum NR_readlinkat = 298;
enum NR_fchmodat = 299;
enum NR_faccessat = 300;
enum NR_pselect6 = 301;
enum NR_ppoll = 302;
enum NR_unshare = 303;
enum NR_set_robust_list = 304;
enum NR_get_robust_list = 305;
enum NR_splice = 306;
enum NR_sync_file_range = 307;
enum NR_tee = 308;
enum NR_vmsplice = 309;
enum NR_move_pages = 310;
enum NR_getcpu = 311;
enum NR_epoll_pwait = 312;
enum NR_utimes = 313;
enum NR_fallocate = 314;
enum NR_utimensat = 315;
enum NR_signalfd = 316;
enum NR_timerfd = 317;
enum NR_eventfd = 318;
enum NR_timerfd_create = 319;
enum NR_timerfd_settime = 320;
enum NR_timerfd_gettime = 321;
enum NR_signalfd4 = 322;
enum NR_eventfd2 = 323;
enum NR_inotify_init1 = 324;
enum NR_pipe2 = 325;
enum NR_dup3 = 326;
enum NR_epoll_create1 = 327;
enum NR_preadv = 328;
enum NR_pwritev = 329;
enum NR_rt_tgsigqueueinfo = 330;
enum NR_perf_event_open = 331;
enum NR_fanotify_init = 332;
enum NR_fanotify_mark = 333;
enum NR_prlimit64 = 334;
enum NR_name_to_handle_at = 335;
enum NR_open_by_handle_at = 336;
enum NR_clock_adjtime = 337;
enum NR_syncfs = 338;
enum NR_setns = 339;
enum NR_process_vm_readv = 340;
enum NR_process_vm_writev = 341;
enum NR_s390_runtime_instr = 342;
enum NR_kcmp = 343;
enum NR_finit_module = 344;
enum NR_sched_setattr = 345;
enum NR_sched_getattr = 346;
enum NR_renameat2 = 347;
enum NR_seccomp = 348;
enum NR_getrandom = 349;
enum NR_memfd_create = 350;
enum NR_bpf = 351;
enum NR_s390_pci_mmio_write = 352;
enum NR_s390_pci_mmio_read = 353;
enum NR_execveat = 354;
enum NR_userfaultfd = 355;
enum NR_membarrier = 356;
enum NR_recvmmsg = 357;
enum NR_sendmmsg = 358;
enum NR_socket = 359;
enum NR_socketpair = 360;
enum NR_bind = 361;
enum NR_connect = 362;
enum NR_listen = 363;
enum NR_accept4 = 364;
enum NR_getsockopt = 365;
enum NR_setsockopt = 366;
enum NR_getsockname = 367;
enum NR_getpeername = 368;
enum NR_sendto = 369;
enum NR_sendmsg = 370;
enum NR_recvfrom = 371;
enum NR_recvmsg = 372;
enum NR_shutdown = 373;
enum NR_mlock2 = 374;
enum NR_copy_file_range = 375;
enum NR_preadv2 = 376;
enum NR_pwritev2 = 377;
enum NR_s390_guarded_storage = 378;
enum NR_statx = 379;
static if (size_t.sizeof == 4) enum NR_time = 13;
static if (size_t.sizeof == 4) enum NR_lchown = 16;
static if (size_t.sizeof == 4) enum NR_setuid = 23;
static if (size_t.sizeof == 4) enum NR_getuid = 24;
static if (size_t.sizeof == 4) enum NR_stime = 25;
static if (size_t.sizeof == 4) enum NR_setgid = 46;
static if (size_t.sizeof == 4) enum NR_getgid = 47;
static if (size_t.sizeof == 4) enum NR_geteuid = 49;
static if (size_t.sizeof == 4) enum NR_getegid = 50;
static if (size_t.sizeof == 4) enum NR_setreuid = 70;
static if (size_t.sizeof == 4) enum NR_setregid = 71;
static if (size_t.sizeof == 4) enum NR_getrlimit = 76;
static if (size_t.sizeof == 4) enum NR_getgroups = 80;
static if (size_t.sizeof == 4) enum NR_setgroups = 81;
static if (size_t.sizeof == 4) enum NR_fchown = 95;
static if (size_t.sizeof == 4) enum NR_ioperm = 101;
static if (size_t.sizeof == 4) enum NR_setfsuid = 138;
static if (size_t.sizeof == 4) enum NR_setfsgid = 139;
static if (size_t.sizeof == 4) enum NR__llseek = 140;
static if (size_t.sizeof == 4) enum NR__newselect = 142;
static if (size_t.sizeof == 4) enum NR_setresuid = 164;
static if (size_t.sizeof == 4) enum NR_getresuid = 165;
static if (size_t.sizeof == 4) enum NR_setresgid = 170;
static if (size_t.sizeof == 4) enum NR_getresgid = 171;
static if (size_t.sizeof == 4) enum NR_chown = 182;
static if (size_t.sizeof == 4) enum NR_ugetrlimit = 191;
static if (size_t.sizeof == 4) enum NR_mmap2 = 192;
static if (size_t.sizeof == 4) enum NR_truncate64 = 193;
static if (size_t.sizeof == 4) enum NR_ftruncate64 = 194;
static if (size_t.sizeof == 4) enum NR_stat64 = 195;
static if (size_t.sizeof == 4) enum NR_lstat64 = 196;
static if (size_t.sizeof == 4) enum NR_fstat64 = 197;
static if (size_t.sizeof == 4) enum NR_lchown32 = 198;
static if (size_t.sizeof == 4) enum NR_getuid32 = 199;
static if (size_t.sizeof == 4) enum NR_getgid32 = 200;
static if (size_t.sizeof == 4) enum NR_geteuid32 = 201;
static if (size_t.sizeof == 4) enum NR_getegid32 = 202;
static if (size_t.sizeof == 4) enum NR_setreuid32 = 203;
static if (size_t.sizeof == 4) enum NR_setregid32 = 204;
static if (size_t.sizeof == 4) enum NR_getgroups32 = 205;
static if (size_t.sizeof == 4) enum NR_setgroups32 = 206;
static if (size_t.sizeof == 4) enum NR_fchown32 = 207;
static if (size_t.sizeof == 4) enum NR_setresuid32 = 208;
static if (size_t.sizeof == 4) enum NR_getresuid32 = 209;
static if (size_t.sizeof == 4) enum NR_setresgid32 = 210;
static if (size_t.sizeof == 4) enum NR_getresgid32 = 211;
static if (size_t.sizeof == 4) enum NR_chown32 = 212;
static if (size_t.sizeof == 4) enum NR_setuid32 = 213;
static if (size_t.sizeof == 4) enum NR_setgid32 = 214;
static if (size_t.sizeof == 4) enum NR_setfsuid32 = 215;
static if (size_t.sizeof == 4) enum NR_setfsgid32 = 216;
static if (size_t.sizeof == 4) enum NR_fcntl64 = 221;
static if (size_t.sizeof == 4) enum NR_sendfile64 = 223;
static if (size_t.sizeof == 4) enum NR_fadvise64_64 = 264;
static if (size_t.sizeof == 4) enum NR_fstatat64 = 293;
static if (size_t.sizeof == 8) enum NR_select = 142;
static if (size_t.sizeof == 8) enum NR_getrlimit = 191;
static if (size_t.sizeof == 8) enum NR_lchown = 198;
static if (size_t.sizeof == 8) enum NR_getuid = 199;
static if (size_t.sizeof == 8) enum NR_getgid = 200;
static if (size_t.sizeof == 8) enum NR_geteuid = 201;
static if (size_t.sizeof == 8) enum NR_getegid = 202;
static if (size_t.sizeof == 8) enum NR_setreuid = 203;
static if (size_t.sizeof == 8) enum NR_setregid = 204;
static if (size_t.sizeof == 8) enum NR_getgroups = 205;
static if (size_t.sizeof == 8) enum NR_setgroups = 206;
static if (size_t.sizeof == 8) enum NR_fchown = 207;
static if (size_t.sizeof == 8) enum NR_setresuid = 208;
static if (size_t.sizeof == 8) enum NR_getresuid = 209;
static if (size_t.sizeof == 8) enum NR_setresgid = 210;
static if (size_t.sizeof == 8) enum NR_getresgid = 211;
static if (size_t.sizeof == 8) enum NR_chown = 212;
static if (size_t.sizeof == 8) enum NR_setuid = 213;
static if (size_t.sizeof == 8) enum NR_setgid = 214;
static if (size_t.sizeof == 8) enum NR_setfsuid = 215;
static if (size_t.sizeof == 8) enum NR_setfsgid = 216;
static if (size_t.sizeof == 8) enum NR_newfstatat = 293;
